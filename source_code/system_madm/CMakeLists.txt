# - Set allows giving a value to a variable similar to: UI_FILES = "file1.ui file2.ui file3.ui"
# - A list of .ui Files is made to make it easier to work with them
# - Glob can also be used but this manual way is safer and also the recommened approach for faster in between builds
# - The UI files need to be wrapped to generate the ui-xxxx.h files this is done using qt_wrap_ui
set(UI_FILES
	source_code/gui/MadmGui_Weighting_Set_Dia.ui
	source_code/gui/MadmGui_Rank_Wid.ui
	source_code/gui/MadmGui_Weight_Sets_Wid.ui
	source_code/gui/MadmGui_Total_Rank_Wid.ui 
)

# - Set allows giving a value to a variable similar to: H_FILES = "file1.h file2.h file3.h"
# - A list of .h Files is made to make it easier to work with them
# - All the h files in this library need to be added here MANUALLY.
# - This variable is passed to the library when creating it so that it knows what files are parts of it
set(H_FILES
	source_code/Madm_System.h
	source_code/Madm_Headers_Precompiled.h
	source_code/Madm_Analysis.h
	source_code/Madm_Solver_Saw.h
	source_code/Madm_Solver_Topsis.h
	source_code/Madm_Solver_Electre.h
	source_code/Madm_Decision_Matrix.h
	source_code/_Madm_Solver.h
	source_code/gui/MadmGui_Weighting_Set_Dia.h
	source_code/gui/MadmGui_Rank_Wid.h
	source_code/gui/MadmGui_Total_Rank_Wid.h
	source_code/gui/MadmGui_Weight_Sets_Wid.h
	source_code/gui/MadmGui_Matrix_Summary_Wid.h 
)

# - Set allows giving a value to a variable similar to: CPP_FILES = "file1.cpp file2.cpp file3.cpp"
# - A list of h Files is made to make it easier to work with them
# - All the .cpp files in this library need to be added here MANUALLY.
# - This variable is passed to the library when creating it so that it knows what files to compile
set(CPP_FILES 				
	source_code/Madm_System.cpp
	source_code/Madm_Analysis.cpp
	source_code/Madm_Solver_Saw.cpp
	source_code/Madm_Solver_Topsis.cpp
	source_code/Madm_Solver_Electre.cpp
	source_code/Madm_Decision_Matrix.cpp
	source_code/_Madm_Solver.cpp
	source_code/gui/MadmGui_Weighting_Set_Dia.cpp
	source_code/gui/MadmGui_Weight_Sets_Wid.cpp
	source_code/gui/MadmGui_Rank_Wid.cpp
	source_code/gui/MadmGui_Total_Rank_Wid.cpp
	source_code/gui/MadmGui_Matrix_Summary_Wid.cpp
)

# - Set allows giving a value to a variable similar to: PrecompiledHeaders = "PrecompiledHeaders.h"
# - Set is used here for consistency of the code
# - The precompiledHeader will be targeted by the library so that it precomiples this header file for faster build times
set(PrecompiledHeaders
	source_code/Madm_Headers_Precompiled.h
)

# - add_library create the library
# - The add_library is the engine here and is defined as add_library(<name> [STATIC | SHARED | MODULE] [EXCLUDE_FROM_ALL] [<source>...])
# - system_madm is the name given to the library
# - What follows are the source codes
add_library(system_madm
	${UI_FILES}
	${H_FILES}
	${CPP_FILES}
	${PrecompiledHeaders}
)

# - target_precompile_headers sets the precompiled headers of the target (library)
# - The precompiled headers is set to PUBLIC so that other libraries in the solution can also use this precompiled header
target_precompile_headers(system_madm PUBLIC ${PrecompiledHeaders})

# - target_include_directories sets the include directories for a specfic target
# - It is set to PUBLIC meaning the parent targerts also inherit these directories
# - For example: the HYD Library is a parent of solver and has access to things like: include "cvode.h"
# - ${CMAKE_CURRENT_BINARY_DIR} because it is the location of the ui_xxxx.h files that are generated by qt_wrap_ui
# - MADM includes some headers from alt and cost and thus they are included here
target_include_directories(system_madm
    PUBLIC
        ${CMAKE_CURRENT_BINARY_DIR}
	    source_code
	    source_code/gui
		${CMAKE_SOURCE_DIR}/source_code/system_cost/source_code
		${CMAKE_SOURCE_DIR}/source_code/system_cost/source_code/gui
		${CMAKE_SOURCE_DIR}/source_code/system_alt/source_code/
		${CMAKE_SOURCE_DIR}/source_code/system_alt/source_code/gui
)

# - target_link_libraries links libraries to a specfic target
# - The target_include_directories tells the program where the headers are. But not what the classes do
# - The dlls or libs are what include the functions themselves.
# - system_madm only depends on system_risk, the rest are for clarity
target_link_libraries(system_madm system_risk system_dam system_fpl system_hydraulic system_sys)

# - qt_wrap_ui (or qt5_wrap_ui) wraps ui files, in other words generating .h files from them
# - AUTOMOC can also be used which does this automatically. This, however, is not recommened, it brings more troubles than solutions  
qt5_wrap_ui(UI_FILES ${UI_FILES})