/*
 * HIGH-PERFORMANCE INTEGRATED MODELLING SYSTEM (HiPIMS)
 * Copyright (C) 2023 Luke S. Smith, Qiuhua Liang.
 * This code is licensed under GPLv3. See LICENCE for more information.
 * This file has been modified by Alaa Mroue on 04.2023-12.2023.
 * See OriginalSourceCode.zip for changes. (Based on 1e62acf6b9b480e08646b232361b68c1827d91ae from https://github.com/lukeshope/hipims-ocl )
 */

 #define MUSCL_SCHEME 1
 #define GODUNOV_OR_MUSCL 1

// Structure definitions
typedef struct sFaceStructure {
	cl_double4	pN;
	cl_double4	pE;
	cl_double4	pS;
	cl_double4	pW;
} sFaceStructure;

#ifdef USE_FUNCTION_STUBS

// Function definitions
__kernel  REQD_WG_SIZE_HALF_TS
void mch_1st_cacheNone ( 
	__constant	cl_double *,
	__global	cl_double const * restrict,
	__global	cl_double4 *,
	#ifdef MEM_SEPARATE_FACES
	__global	cl_double4 *,
	__global	cl_double4 *,
	__global	cl_double4 *,
	__global	cl_double4 *
	#endif
	#ifdef MEM_CONTIGUOUS_FACES
	__global	sFaceStructure *
	#endif
);

__kernel  REQD_WG_SIZE_HALF_TS
void mch_1st_cachePrediction ( 
	__constant	cl_double *,
	__global	cl_double const * restrict,
	__global	cl_double4 *,
	#ifdef MEM_SEPARATE_FACES
	__global	cl_double4 *,
	__global	cl_double4 *,
	__global	cl_double4 *,
	__global	cl_double4 *
	#endif
	#ifdef MEM_CONTIGUOUS_FACES
	__global	sFaceStructure *
	#endif
);

bool mch_1st (
	cl_double,
	cl_double4,
	cl_double4,
	cl_double4,
	cl_double4,
	cl_double4,
	cl_double,
	cl_double,
	cl_double,
	cl_double,
	cl_double,
	cl_double4 *,
	cl_double4 *,
	cl_double4 *,
	cl_double4 *
);

cl_double4 faceExtrapolate ( 
	cl_double,
	cl_double4,
	cl_double4,
	cl_double
);

cl_double calculateFaceExtrapolation ( 
	cl_double,
	cl_double,
	cl_double
);

cl_double4 estimateFluxVectorX ( 
	cl_double4
);

cl_double4 estimateFluxVectorY ( 
	cl_double4
);

cl_double4 evolveCellState ( 
	cl_double,
	cl_double4,
	cl_double4,
	cl_double4,
	cl_double4,
	cl_double4,
	cl_double4,
	cl_double4,
	cl_double4,
	cl_double4
);

__kernel   REQD_WG_SIZE_FULL_TS
void mch_2nd_cacheNone ( 
	__constant	cl_double *,
	__global	cl_double4 *,
	__global	cl_double const * restrict,
	__global	cl_double const * restrict,
	#ifdef MEM_SEPARATE_FACES
	__global	cl_double4 *,
	__global	cl_double4 *,
	__global	cl_double4 *,
	__global	cl_double4 *
	#endif
	#ifdef MEM_CONTIGUOUS_FACES
	__global	sFaceStructure *
	#endif
);

__kernel   REQD_WG_SIZE_FULL_TS
void mch_cacheMaximum ( 
	__constant	cl_double *,
	__global	cl_double4 *,
	__global	cl_double const * restrict,
	__global	cl_double const * restrict
);

cl_uchar reconstructInterface(
	cl_double4,
	cl_double,
	cl_double4,
	cl_double,
	cl_double4,
	cl_double4,
	cl_double8*,
	cl_double8*,
	cl_uchar
);

#endif